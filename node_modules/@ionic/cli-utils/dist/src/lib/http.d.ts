import * as superagent from 'superagent';
import { APIResponse, APIResponseError, APIResponseSuccess, IClient, HttpMethod, SuperAgentError } from '../definitions';
import { FatalException } from './errors';
export declare const ERROR_UNKNOWN_CONTENT_TYPE = "UNKNOWN_CONTENT_TYPE";
export declare const ERROR_UNKNOWN_RESPONSE_FORMAT = "UNKNOWN_RESPONSE_FORMAT";
export declare class Client implements IClient {
    host: string;
    constructor(host: string);
    static transform(r: superagent.Response): APIResponse;
    make(method: HttpMethod, path: string): superagent.Request;
    do(req: superagent.Request): Promise<APIResponseSuccess>;
}
export declare function isAPIResponseSuccess(r: APIResponse): r is APIResponseSuccess;
export declare function isAPIResponseError(r: APIResponse): r is APIResponseError;
export declare function createFatalAPIFormat(req: superagent.SuperAgentRequest, res: APIResponse): FatalException;
export declare function formatError(e: SuperAgentError): string;
export declare function formatAPIResponse(req: superagent.SuperAgentRequest, r: APIResponse): string;
export declare function formatAPIError(req: superagent.SuperAgentRequest, r: APIResponseError): string;
