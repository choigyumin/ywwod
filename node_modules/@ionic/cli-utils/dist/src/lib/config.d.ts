import { ConfigFile, IConfig } from '../definitions';
export declare abstract class BaseConfig<T> implements IConfig<T> {
    directory: string;
    fileName: string;
    filePath: string;
    protected configFile?: T;
    protected originalConfigFile?: T;
    constructor(directory: string, fileName: string);
    abstract provideDefaults(o: {
        [key: string]: any;
    }): {
        [key: string]: any;
    };
    abstract is<T>(o: {
        [key: string]: any;
    }): o is T;
    load(): Promise<T>;
    save(configFile?: T): Promise<void>;
}
export declare class Config extends BaseConfig<ConfigFile> {
    provideDefaults(o: any): any;
    is<ConfigFile>(j: any): j is ConfigFile;
}
